// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stories;

///<summary>
/// See <a href="https://corefork.telegram.org/method/stories.sendStory" />
///</summary>
[TlObject(0xbcb73644)]
public sealed class RequestSendStory : IRequest<MyTelegram.Schema.IUpdates>
{
    public uint ConstructorId => 0xbcb73644;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Pinned { get; set; }
    public bool Noforwards { get; set; }
    public MyTelegram.Schema.IInputPeer Peer { get; set; }
    public MyTelegram.Schema.IInputMedia Media { get; set; }
    public TVector<MyTelegram.Schema.IMediaArea>? MediaAreas { get; set; }
    public string? Caption { get; set; }
    public TVector<MyTelegram.Schema.IMessageEntity>? Entities { get; set; }
    public TVector<MyTelegram.Schema.IInputPrivacyRule> PrivacyRules { get; set; }
    public long RandomId { get; set; }
    public int? Period { get; set; }

    public void ComputeFlag()
    {
        if (Pinned) { Flags[2] = true; }
        if (Noforwards) { Flags[4] = true; }
        if (MediaAreas?.Count > 0) { Flags[5] = true; }
        if (Caption != null) { Flags[0] = true; }
        if (Entities?.Count > 0) { Flags[1] = true; }
        if (/*Period != 0 && */Period.HasValue) { Flags[3] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Peer);
        writer.Write(Media);
        if (Flags[5]) { writer.Write(MediaAreas); }
        if (Flags[0]) { writer.Write(Caption); }
        if (Flags[1]) { writer.Write(Entities); }
        writer.Write(PrivacyRules);
        writer.Write(RandomId);
        if (Flags[3]) { writer.Write(Period.Value); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[2]) { Pinned = true; }
        if (Flags[4]) { Noforwards = true; }
        Peer = reader.Read<MyTelegram.Schema.IInputPeer>();
        Media = reader.Read<MyTelegram.Schema.IInputMedia>();
        if (Flags[5]) { MediaAreas = reader.Read<TVector<MyTelegram.Schema.IMediaArea>>(); }
        if (Flags[0]) { Caption = reader.ReadString(); }
        if (Flags[1]) { Entities = reader.Read<TVector<MyTelegram.Schema.IMessageEntity>>(); }
        PrivacyRules = reader.Read<TVector<MyTelegram.Schema.IInputPrivacyRule>>();
        RandomId = reader.ReadInt64();
        if (Flags[3]) { Period = reader.ReadInt32(); }
    }
}
