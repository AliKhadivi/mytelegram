// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Chat waiting for approval of second participant.
/// See <a href="https://corefork.telegram.org/constructor/encryptedChatWaiting" />
///</summary>
[TlObject(0x66b25953)]
public sealed class TEncryptedChatWaiting : IEncryptedChat
{
    public uint ConstructorId => 0x66b25953;
    ///<summary>
    /// Chat ID
    ///</summary>
    public int Id { get; set; }

    ///<summary>
    /// Checking sum depending on user ID
    ///</summary>
    public long AccessHash { get; set; }

    ///<summary>
    /// Date of chat creation
    ///</summary>
    public int Date { get; set; }

    ///<summary>
    /// Chat creator ID
    ///</summary>
    public long AdminId { get; set; }

    ///<summary>
    /// ID of second chat participant
    ///</summary>
    public long ParticipantId { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Id);
        writer.Write(AccessHash);
        writer.Write(Date);
        writer.Write(AdminId);
        writer.Write(ParticipantId);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Id = reader.ReadInt32();
        AccessHash = reader.ReadInt64();
        Date = reader.ReadInt32();
        AdminId = reader.ReadInt64();
        ParticipantId = reader.ReadInt64();
    }
}