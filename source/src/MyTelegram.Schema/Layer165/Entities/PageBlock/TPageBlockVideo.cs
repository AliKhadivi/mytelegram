// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Video
/// See <a href="https://corefork.telegram.org/constructor/pageBlockVideo" />
///</summary>
[TlObject(0x7c8fe7b6)]
public sealed class TPageBlockVideo : IPageBlock
{
    public uint ConstructorId => 0x7c8fe7b6;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Whether the video is set to autoplay
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Autoplay { get; set; }

    ///<summary>
    /// Whether the video is set to loop
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Loop { get; set; }

    ///<summary>
    /// Video ID
    ///</summary>
    public long VideoId { get; set; }

    ///<summary>
    /// Caption
    /// See <a href="https://corefork.telegram.org/type/PageCaption" />
    ///</summary>
    public MyTelegram.Schema.IPageCaption Caption { get; set; }

    public void ComputeFlag()
    {
        if (Autoplay) { Flags[0] = true; }
        if (Loop) { Flags[1] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(VideoId);
        writer.Write(Caption);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Autoplay = true; }
        if (Flags[1]) { Loop = true; }
        VideoId = reader.ReadInt64();
        Caption = reader.Read<MyTelegram.Schema.IPageCaption>();
    }
}