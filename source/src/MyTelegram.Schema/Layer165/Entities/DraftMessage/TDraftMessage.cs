// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Represents a message <a href="https://corefork.telegram.org/api/drafts">draft</a>.
/// See <a href="https://corefork.telegram.org/constructor/draftMessage" />
///</summary>
[TlObject(0xfd8e711f)]
public sealed class TDraftMessage : IDraftMessage
{
    public uint ConstructorId => 0xfd8e711f;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Whether no webpage preview will be generated
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool NoWebpage { get; set; }

    ///<summary>
    /// The message this message will reply to
    ///</summary>
    public int? ReplyToMsgId { get; set; }

    ///<summary>
    /// The draft
    ///</summary>
    public string Message { get; set; }

    ///<summary>
    /// Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text.
    ///</summary>
    public TVector<MyTelegram.Schema.IMessageEntity>? Entities { get; set; }

    ///<summary>
    /// Date of last update of the draft.
    ///</summary>
    public int Date { get; set; }

    public void ComputeFlag()
    {
        if (NoWebpage) { Flags[1] = true; }
        if (/*ReplyToMsgId != 0 && */ReplyToMsgId.HasValue) { Flags[0] = true; }
        if (Entities?.Count > 0) { Flags[3] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        if (Flags[0]) { writer.Write(ReplyToMsgId.Value); }
        writer.Write(Message);
        if (Flags[3]) { writer.Write(Entities); }
        writer.Write(Date);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[1]) { NoWebpage = true; }
        if (Flags[0]) { ReplyToMsgId = reader.ReadInt32(); }
        Message = reader.ReadString();
        if (Flags[3]) { Entities = reader.Read<TVector<MyTelegram.Schema.IMessageEntity>>(); }
        Date = reader.ReadInt32();
    }
}