// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Channels;

///<summary>
///See <a href="https://core.telegram.org/method/channels.editForumTopic" />
///</summary>
[TlObject(0x6c883e2d)]
public sealed class RequestEditForumTopic : IRequest<MyTelegram.Schema.IUpdates>
{
    public uint ConstructorId => 0x6c883e2d;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputChannel" />
    ///</summary>
    public MyTelegram.Schema.IInputChannel Channel { get; set; }
    public int TopicId { get; set; }
    public string? Title { get; set; }
    public long? IconEmojiId { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? Closed { get; set; }

    public void ComputeFlag()
    {
        if (Title != null) { Flags[0] = true; }
        if (IconEmojiId != 0 && IconEmojiId.HasValue) { Flags[1] = true; }
        if (Closed !=null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Channel.Serialize(bw);
        bw.Write(TopicId);
        if (Flags[0]) { bw.Serialize(Title); }
        if (Flags[1]) { bw.Write(IconEmojiId.Value); }
        if (Flags[2]) { bw.Serialize(Closed.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Channel = br.Deserialize<MyTelegram.Schema.IInputChannel>();
        TopicId = br.ReadInt32();
        if (Flags[0]) { Title = br.Deserialize<string>(); }
        if (Flags[1]) { IconEmojiId = br.ReadInt64(); }
        if (Flags[2]) { Closed = br.Deserialize<bool>(); }
    }
}
