// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/autoDownloadSettings" />
///</summary>
[TlObject(0x8efab953)]
public class TAutoDownloadSettings : IAutoDownloadSettings
{
    public uint ConstructorId => 0x8efab953;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Disabled { get; set; }
    public bool VideoPreloadLarge { get; set; }
    public bool AudioPreloadNext { get; set; }
    public bool PhonecallsLessData { get; set; }
    public int PhotoSizeMax { get; set; }
    public long VideoSizeMax { get; set; }
    public long FileSizeMax { get; set; }
    public int VideoUploadMaxbitrate { get; set; }

    public void ComputeFlag()
    {
        if (Disabled) { Flags[0] = true; }
        if (VideoPreloadLarge) { Flags[1] = true; }
        if (AudioPreloadNext) { Flags[2] = true; }
        if (PhonecallsLessData) { Flags[3] = true; }

    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Write(PhotoSizeMax);
        bw.Write(VideoSizeMax);
        bw.Write(FileSizeMax);
        bw.Write(VideoUploadMaxbitrate);
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Disabled = true; }
        if (Flags[1]) { VideoPreloadLarge = true; }
        if (Flags[2]) { AudioPreloadNext = true; }
        if (Flags[3]) { PhonecallsLessData = true; }
        PhotoSizeMax = br.ReadInt32();
        VideoSizeMax = br.ReadInt64();
        FileSizeMax = br.ReadInt64();
        VideoUploadMaxbitrate = br.ReadInt32();
    }
}