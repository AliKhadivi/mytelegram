// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/codeSettings" />
///</summary>
[TlObject(0xad253d78)]
public sealed class TCodeSettings : ICodeSettings
{
    public uint ConstructorId => 0xad253d78;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool AllowFlashcall { get; set; }
    public bool CurrentNumber { get; set; }
    public bool AllowAppHash { get; set; }
    public bool AllowMissedCall { get; set; }
    public bool AllowFirebase { get; set; }
    public TVector<byte[]>? LogoutTokens { get; set; }
    public string? Token { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? AppSandbox { get; set; }

    public void ComputeFlag()
    {
        if (AllowFlashcall) { Flags[0] = true; }
        if (CurrentNumber) { Flags[1] = true; }
        if (AllowAppHash) { Flags[4] = true; }
        if (AllowMissedCall) { Flags[5] = true; }
        if (AllowFirebase) { Flags[7] = true; }
        if (LogoutTokens?.Count > 0) { Flags[6] = true; }
        if (Token != null) { Flags[8] = true; }
        if (AppSandbox !=null) { Flags[8] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[6]) { LogoutTokens.Serialize(bw); }
        if (Flags[8]) { bw.Serialize(Token); }
        if (Flags[8]) { bw.Serialize(AppSandbox.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { AllowFlashcall = true; }
        if (Flags[1]) { CurrentNumber = true; }
        if (Flags[4]) { AllowAppHash = true; }
        if (Flags[5]) { AllowMissedCall = true; }
        if (Flags[7]) { AllowFirebase = true; }
        if (Flags[6]) { LogoutTokens = br.Deserialize<TVector<byte[]>>(); }
        if (Flags[8]) { Token = br.Deserialize<string>(); }
        if (Flags[8]) { AppSandbox = br.Deserialize<bool>(); }
    }
}