// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/requestPeerTypeBroadcast" />
///</summary>
[TlObject(0x339bef6c)]
public sealed class TRequestPeerTypeBroadcast : IRequestPeerType
{
    public uint ConstructorId => 0x339bef6c;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Creator { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? HasUsername { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/ChatAdminRights" />
    ///</summary>
    public MyTelegram.Schema.IChatAdminRights? UserAdminRights { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/ChatAdminRights" />
    ///</summary>
    public MyTelegram.Schema.IChatAdminRights? BotAdminRights { get; set; }

    public void ComputeFlag()
    {
        if (Creator) { Flags[0] = true; }
        if (HasUsername !=null) { Flags[3] = true; }
        if (UserAdminRights != null) { Flags[1] = true; }
        if (BotAdminRights != null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[3]) { bw.Serialize(HasUsername.Value); }
        if (Flags[1]) { UserAdminRights.Serialize(bw); }
        if (Flags[2]) { BotAdminRights.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Creator = true; }
        if (Flags[3]) { HasUsername = br.Deserialize<bool>(); }
        if (Flags[1]) { UserAdminRights = br.Deserialize<MyTelegram.Schema.IChatAdminRights>(); }
        if (Flags[2]) { BotAdminRights = br.Deserialize<MyTelegram.Schema.IChatAdminRights>(); }
    }
}