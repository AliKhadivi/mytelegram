// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/inputWebFileAudioAlbumThumbLocation" />
///</summary>
[TlObject(0xf46fe924)]
public sealed class TInputWebFileAudioAlbumThumbLocation : IInputWebFileLocation
{
    public uint ConstructorId => 0xf46fe924;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Small { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputDocument" />
    ///</summary>
    public MyTelegram.Schema.IInputDocument? Document { get; set; }
    public string? Title { get; set; }
    public string? Performer { get; set; }

    public void ComputeFlag()
    {
        if (Small) { Flags[2] = true; }
        if (Document != null) { Flags[0] = true; }
        if (Title != null) { Flags[1] = true; }
        if (Performer != null) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[0]) { Document.Serialize(bw); }
        if (Flags[1]) { bw.Serialize(Title); }
        if (Flags[1]) { bw.Serialize(Performer); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[2]) { Small = true; }
        if (Flags[0]) { Document = br.Deserialize<MyTelegram.Schema.IInputDocument>(); }
        if (Flags[1]) { Title = br.Deserialize<string>(); }
        if (Flags[1]) { Performer = br.Deserialize<string>(); }
    }
}