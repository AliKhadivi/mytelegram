// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/inputStickerSetItem" />
///</summary>
[TlObject(0x32da9e9c)]
public sealed class TInputStickerSetItem : IInputStickerSetItem
{
    public uint ConstructorId => 0x32da9e9c;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputDocument" />
    ///</summary>
    public MyTelegram.Schema.IInputDocument Document { get; set; }
    public string Emoji { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/MaskCoords" />
    ///</summary>
    public MyTelegram.Schema.IMaskCoords? MaskCoords { get; set; }
    public string? Keywords { get; set; }

    public void ComputeFlag()
    {
        if (MaskCoords != null) { Flags[0] = true; }
        if (Keywords != null) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Document.Serialize(bw);
        bw.Serialize(Emoji);
        if (Flags[0]) { MaskCoords.Serialize(bw); }
        if (Flags[1]) { bw.Serialize(Keywords); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Document = br.Deserialize<MyTelegram.Schema.IInputDocument>();
        Emoji = br.Deserialize<string>();
        if (Flags[0]) { MaskCoords = br.Deserialize<MyTelegram.Schema.IMaskCoords>(); }
        if (Flags[1]) { Keywords = br.Deserialize<string>(); }
    }
}