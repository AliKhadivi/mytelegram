// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stickers;

///<summary>
///See <a href="https://core.telegram.org/method/stickers.setStickerSetThumb" />
///</summary>
[TlObject(0xa76a5392)]
public sealed class RequestSetStickerSetThumb : IRequest<MyTelegram.Schema.Messages.IStickerSet>
{
    public uint ConstructorId => 0xa76a5392;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputStickerSet" />
    ///</summary>
    public MyTelegram.Schema.IInputStickerSet Stickerset { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputDocument" />
    ///</summary>
    public MyTelegram.Schema.IInputDocument? Thumb { get; set; }
    public long? ThumbDocumentId { get; set; }

    public void ComputeFlag()
    {
        if (Thumb != null) { Flags[0] = true; }
        if (ThumbDocumentId != 0 && ThumbDocumentId.HasValue) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Stickerset.Serialize(bw);
        if (Flags[0]) { Thumb.Serialize(bw); }
        if (Flags[1]) { bw.Write(ThumbDocumentId.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Stickerset = br.Deserialize<MyTelegram.Schema.IInputStickerSet>();
        if (Flags[0]) { Thumb = br.Deserialize<MyTelegram.Schema.IInputDocument>(); }
        if (Flags[1]) { ThumbDocumentId = br.ReadInt64(); }
    }
}
