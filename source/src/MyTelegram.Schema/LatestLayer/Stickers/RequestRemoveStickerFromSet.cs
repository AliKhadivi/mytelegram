// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stickers;

///<summary>
/// Remove a sticker from the set where it belongs, bots only. The sticker set must have been created by the bot.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 BOT_MISSING Only bots can call this method, please use <a href="https://t.me/stickers">@stickers</a> if you're a user.
/// 400 STICKER_INVALID The provided sticker is invalid.
/// See <a href="https://corefork.telegram.org/method/stickers.removeStickerFromSet" />
///</summary>
[TlObject(0xf7760f51)]
public sealed class RequestRemoveStickerFromSet : IRequest<MyTelegram.Schema.Messages.IStickerSet>
{
    public uint ConstructorId => 0xf7760f51;
    ///<summary>
    /// The sticker to remove
    /// See <a href="https://corefork.telegram.org/type/InputDocument" />
    ///</summary>
    public MyTelegram.Schema.IInputDocument Sticker { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Sticker);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Sticker = reader.Read<MyTelegram.Schema.IInputDocument>();
    }
}
