// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Smsjobs;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/smsjobs.status" />
///</summary>
[TlObject(0x2aee9191)]
public sealed class TStatus : IStatus
{
    public uint ConstructorId => 0x2aee9191;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool AllowInternational { get; set; }
    public int RecentSent { get; set; }
    public int RecentSince { get; set; }
    public int RecentRemains { get; set; }
    public int TotalSent { get; set; }
    public int TotalSince { get; set; }
    public string? LastGiftSlug { get; set; }
    public string TermsUrl { get; set; }

    public void ComputeFlag()
    {
        if (AllowInternational) { Flags[0] = true; }
        if (LastGiftSlug != null) { Flags[1] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(RecentSent);
        writer.Write(RecentSince);
        writer.Write(RecentRemains);
        writer.Write(TotalSent);
        writer.Write(TotalSince);
        if (Flags[1]) { writer.Write(LastGiftSlug); }
        writer.Write(TermsUrl);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { AllowInternational = true; }
        RecentSent = reader.ReadInt32();
        RecentSince = reader.ReadInt32();
        RecentRemains = reader.ReadInt32();
        TotalSent = reader.ReadInt32();
        TotalSince = reader.ReadInt32();
        if (Flags[1]) { LastGiftSlug = reader.ReadString(); }
        TermsUrl = reader.ReadString();
    }
}