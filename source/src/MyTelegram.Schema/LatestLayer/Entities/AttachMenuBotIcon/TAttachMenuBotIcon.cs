// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Represents an attachment menu icon for <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps »</a>
/// See <a href="https://corefork.telegram.org/constructor/attachMenuBotIcon" />
///</summary>
[TlObject(0xb2a7386b)]
public sealed class TAttachMenuBotIcon : IAttachMenuBotIcon
{
    public uint ConstructorId => 0xb2a7386b;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// One of the following values: note that animated icons must be played when the user clicks on the button, activating the bot mini app. <br><br><code>default_static</code> - Default attachment menu icon in SVG format <br><code>placeholder_static</code> - Default placeholder for opened Web Apps in SVG format <br><code>ios_static</code> - Attachment menu icon in SVG format for the official iOS app <br><code>ios_animated</code> - Animated attachment menu icon in TGS format for the official iOS app <br><code>android_animated</code> - Animated attachment menu icon in TGS format for the official Android app <br><code>macos_animated</code> - Animated attachment menu icon in TGS format for the official native Mac OS app <br><code>ios_side_menu_static</code> - Side menu icon in PNG format for the official iOS app <br><code>android_side_menu_static</code> - Side menu icon in SVG format for the official android app <br><code>macos_side_menu_static</code> - Side menu icon in PNG format for the official native Mac OS app
    ///</summary>
    public string Name { get; set; }

    ///<summary>
    /// The actual icon file.
    /// See <a href="https://corefork.telegram.org/type/Document" />
    ///</summary>
    public MyTelegram.Schema.IDocument Icon { get; set; }

    ///<summary>
    /// Attachment menu icon colors.
    ///</summary>
    public TVector<MyTelegram.Schema.IAttachMenuBotIconColor>? Colors { get; set; }

    public void ComputeFlag()
    {
        if (Colors?.Count > 0) { Flags[0] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Name);
        writer.Write(Icon);
        if (Flags[0]) { writer.Write(Colors); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        Name = reader.ReadString();
        Icon = reader.Read<MyTelegram.Schema.IDocument>();
        if (Flags[0]) { Colors = reader.Read<TVector<MyTelegram.Schema.IAttachMenuBotIconColor>>(); }
    }
}