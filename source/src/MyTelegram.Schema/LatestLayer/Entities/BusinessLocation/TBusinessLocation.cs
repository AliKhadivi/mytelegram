// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Represents the location of a <a href="https://corefork.telegram.org/api/business#location">Telegram Business »</a>.
/// See <a href="https://corefork.telegram.org/constructor/businessLocation" />
///</summary>
[TlObject(0xac5c1af7)]
public sealed class TBusinessLocation : IBusinessLocation
{
    public uint ConstructorId => 0xac5c1af7;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Geographical coordinates (optional).
    /// See <a href="https://corefork.telegram.org/type/GeoPoint" />
    ///</summary>
    public MyTelegram.Schema.IGeoPoint? GeoPoint { get; set; }

    ///<summary>
    /// Textual description of the address (mandatory).
    ///</summary>
    public string Address { get; set; }

    public void ComputeFlag()
    {
        if (GeoPoint != null) { Flags[0] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        if (Flags[0]) { writer.Write(GeoPoint); }
        writer.Write(Address);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { GeoPoint = reader.Read<MyTelegram.Schema.IGeoPoint>(); }
        Address = reader.ReadString();
    }
}