// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/updateBusinessBotCallbackQuery" />
///</summary>
[TlObject(0x1ea2fda7)]
public sealed class TUpdateBusinessBotCallbackQuery : IUpdate
{
    public uint ConstructorId => 0x1ea2fda7;
    public BitArray Flags { get; set; } = new BitArray(32);
    public long QueryId { get; set; }
    public long UserId { get; set; }
    public string ConnectionId { get; set; }
    public MyTelegram.Schema.IMessage Message { get; set; }
    public MyTelegram.Schema.IMessage? ReplyToMessage { get; set; }
    public long ChatInstance { get; set; }
    public byte[]? Data { get; set; }

    public void ComputeFlag()
    {
        if (ReplyToMessage != null) { Flags[2] = true; }
        if (Data != null) { Flags[0] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(QueryId);
        writer.Write(UserId);
        writer.Write(ConnectionId);
        writer.Write(Message);
        if (Flags[2]) { writer.Write(ReplyToMessage); }
        writer.Write(ChatInstance);
        if (Flags[0]) { writer.Write(Data); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        QueryId = reader.ReadInt64();
        UserId = reader.ReadInt64();
        ConnectionId = reader.ReadString();
        Message = reader.Read<MyTelegram.Schema.IMessage>();
        if (Flags[2]) { ReplyToMessage = reader.Read<MyTelegram.Schema.IMessage>(); }
        ChatInstance = reader.ReadInt64();
        if (Flags[0]) { Data = reader.ReadBytes(); }
    }
}