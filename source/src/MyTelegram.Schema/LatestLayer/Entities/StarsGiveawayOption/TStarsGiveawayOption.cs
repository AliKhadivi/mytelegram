// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/starsGiveawayOption" />
///</summary>
[TlObject(0x94ce852a)]
public sealed class TStarsGiveawayOption : IStarsGiveawayOption
{
    public uint ConstructorId => 0x94ce852a;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Extended { get; set; }
    public bool Default { get; set; }
    public long Stars { get; set; }
    public int YearlyBoosts { get; set; }
    public string? StoreProduct { get; set; }
    public string Currency { get; set; }
    public long Amount { get; set; }
    public TVector<MyTelegram.Schema.IStarsGiveawayWinnersOption> Winners { get; set; }

    public void ComputeFlag()
    {
        if (Extended) { Flags[0] = true; }
        if (Default) { Flags[1] = true; }
        if (StoreProduct != null) { Flags[2] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Stars);
        writer.Write(YearlyBoosts);
        if (Flags[2]) { writer.Write(StoreProduct); }
        writer.Write(Currency);
        writer.Write(Amount);
        writer.Write(Winners);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Extended = true; }
        if (Flags[1]) { Default = true; }
        Stars = reader.ReadInt64();
        YearlyBoosts = reader.ReadInt32();
        if (Flags[2]) { StoreProduct = reader.ReadString(); }
        Currency = reader.ReadString();
        Amount = reader.ReadInt64();
        Winners = reader.Read<TVector<MyTelegram.Schema.IStarsGiveawayWinnersOption>>();
    }
}