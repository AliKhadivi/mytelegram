// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Info on members is unavailable
/// See <a href="https://corefork.telegram.org/constructor/chatParticipantsForbidden" />
///</summary>
[TlObject(0x8763d3e1)]
public sealed class TChatParticipantsForbidden : IChatParticipants
{
    public uint ConstructorId => 0x8763d3e1;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Group ID
    ///</summary>
    public long ChatId { get; set; }

    ///<summary>
    /// Info about the group membership of the current user
    /// See <a href="https://corefork.telegram.org/type/ChatParticipant" />
    ///</summary>
    public MyTelegram.Schema.IChatParticipant? SelfParticipant { get; set; }

    public void ComputeFlag()
    {
        if (SelfParticipant != null) { Flags[0] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(ChatId);
        if (Flags[0]) { writer.Write(SelfParticipant); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        ChatId = reader.ReadInt64();
        if (Flags[0]) { SelfParticipant = reader.Read<MyTelegram.Schema.IChatParticipant>(); }
    }
}