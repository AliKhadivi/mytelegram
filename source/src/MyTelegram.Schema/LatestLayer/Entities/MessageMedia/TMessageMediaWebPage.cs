// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Preview of webpage
/// See <a href="https://corefork.telegram.org/constructor/messageMediaWebPage" />
///</summary>
[TlObject(0xddf10c3b)]
public sealed class TMessageMediaWebPage : IMessageMedia
{
    public uint ConstructorId => 0xddf10c3b;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool ForceLargeMedia { get; set; }
    public bool ForceSmallMedia { get; set; }
    public bool Manual { get; set; }
    public bool Safe { get; set; }

    ///<summary>
    /// Webpage preview
    /// See <a href="https://corefork.telegram.org/type/WebPage" />
    ///</summary>
    public MyTelegram.Schema.IWebPage Webpage { get; set; }

    public void ComputeFlag()
    {
        if (ForceLargeMedia) { Flags[0] = true; }
        if (ForceSmallMedia) { Flags[1] = true; }
        if (Manual) { Flags[3] = true; }
        if (Safe) { Flags[4] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Webpage);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { ForceLargeMedia = true; }
        if (Flags[1]) { ForceSmallMedia = true; }
        if (Flags[3]) { Manual = true; }
        if (Flags[4]) { Safe = true; }
        Webpage = reader.Read<MyTelegram.Schema.IWebPage>();
    }
}