// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/requestedPeerUser" />
///</summary>
[TlObject(0xd62ff46a)]
public sealed class TRequestedPeerUser : IRequestedPeer
{
    public uint ConstructorId => 0xd62ff46a;
    public BitArray Flags { get; set; } = new BitArray(32);
    public long UserId { get; set; }
    public string? FirstName { get; set; }
    public string? LastName { get; set; }
    public string? Username { get; set; }
    public MyTelegram.Schema.IPhoto? Photo { get; set; }

    public void ComputeFlag()
    {
        if (FirstName != null) { Flags[0] = true; }
        if (LastName != null) { Flags[0] = true; }
        if (Username != null) { Flags[1] = true; }
        if (Photo != null) { Flags[2] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(UserId);
        if (Flags[0]) { writer.Write(FirstName); }
        if (Flags[0]) { writer.Write(LastName); }
        if (Flags[1]) { writer.Write(Username); }
        if (Flags[2]) { writer.Write(Photo); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        UserId = reader.ReadInt64();
        if (Flags[0]) { FirstName = reader.ReadString(); }
        if (Flags[0]) { LastName = reader.ReadString(); }
        if (Flags[1]) { Username = reader.ReadString(); }
        if (Flags[2]) { Photo = reader.Read<MyTelegram.Schema.IPhoto>(); }
    }
}