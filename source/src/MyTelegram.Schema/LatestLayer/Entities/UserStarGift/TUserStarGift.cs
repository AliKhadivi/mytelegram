// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/userStarGift" />
///</summary>
[TlObject(0xeea49a6e)]
public sealed class TUserStarGift : IUserStarGift
{
    public uint ConstructorId => 0xeea49a6e;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool NameHidden { get; set; }
    public bool Unsaved { get; set; }
    public long? FromId { get; set; }
    public int Date { get; set; }
    public MyTelegram.Schema.IStarGift Gift { get; set; }
    public MyTelegram.Schema.ITextWithEntities? Message { get; set; }
    public int? MsgId { get; set; }
    public long? ConvertStars { get; set; }

    public void ComputeFlag()
    {
        if (NameHidden) { Flags[0] = true; }
        if (Unsaved) { Flags[5] = true; }
        if (/*FromId != 0 &&*/ FromId.HasValue) { Flags[1] = true; }
        if (Message != null) { Flags[2] = true; }
        if (/*MsgId != 0 && */MsgId.HasValue) { Flags[3] = true; }
        if (/*ConvertStars != 0 &&*/ ConvertStars.HasValue) { Flags[4] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        if (Flags[1]) { writer.Write(FromId.Value); }
        writer.Write(Date);
        writer.Write(Gift);
        if (Flags[2]) { writer.Write(Message); }
        if (Flags[3]) { writer.Write(MsgId.Value); }
        if (Flags[4]) { writer.Write(ConvertStars.Value); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { NameHidden = true; }
        if (Flags[5]) { Unsaved = true; }
        if (Flags[1]) { FromId = reader.ReadInt64(); }
        Date = reader.ReadInt32();
        Gift = reader.Read<MyTelegram.Schema.IStarGift>();
        if (Flags[2]) { Message = reader.Read<MyTelegram.Schema.ITextWithEntities>(); }
        if (Flags[3]) { MsgId = reader.ReadInt32(); }
        if (Flags[4]) { ConvertStars = reader.ReadInt64(); }
    }
}