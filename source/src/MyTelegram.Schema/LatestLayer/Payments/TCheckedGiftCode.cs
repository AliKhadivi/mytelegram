// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Payments;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/payments.checkedGiftCode" />
///</summary>
[TlObject(0xb722f158)]
public sealed class TCheckedGiftCode : ICheckedGiftCode
{
    public uint ConstructorId => 0xb722f158;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool ViaGiveaway { get; set; }
    public MyTelegram.Schema.IPeer FromId { get; set; }
    public int? GiveawayMsgId { get; set; }
    public long? ToId { get; set; }
    public int Date { get; set; }
    public int Months { get; set; }
    public int? UsedDate { get; set; }
    public TVector<MyTelegram.Schema.IChat> Chats { get; set; }
    public TVector<MyTelegram.Schema.IUser> Users { get; set; }

    public void ComputeFlag()
    {
        if (ViaGiveaway) { Flags[2] = true; }
        if (/*GiveawayMsgId != 0 && */GiveawayMsgId.HasValue) { Flags[3] = true; }
        if (/*ToId != 0 &&*/ ToId.HasValue) { Flags[0] = true; }
        if (/*UsedDate != 0 && */UsedDate.HasValue) { Flags[1] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(FromId);
        if (Flags[3]) { writer.Write(GiveawayMsgId.Value); }
        if (Flags[0]) { writer.Write(ToId.Value); }
        writer.Write(Date);
        writer.Write(Months);
        if (Flags[1]) { writer.Write(UsedDate.Value); }
        writer.Write(Chats);
        writer.Write(Users);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[2]) { ViaGiveaway = true; }
        FromId = reader.Read<MyTelegram.Schema.IPeer>();
        if (Flags[3]) { GiveawayMsgId = reader.ReadInt32(); }
        if (Flags[0]) { ToId = reader.ReadInt64(); }
        Date = reader.ReadInt32();
        Months = reader.ReadInt32();
        if (Flags[1]) { UsedDate = reader.ReadInt32(); }
        Chats = reader.Read<TVector<MyTelegram.Schema.IChat>>();
        Users = reader.Read<TVector<MyTelegram.Schema.IUser>>();
    }
}