// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
/// Result of a query to an inline bot
/// See <a href="https://corefork.telegram.org/constructor/messages.botResults" />
///</summary>
[TlObject(0xe021f2f6)]
public sealed class TBotResults : IBotResults
{
    public uint ConstructorId => 0xe021f2f6;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Whether the result is a picture gallery
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Gallery { get; set; }

    ///<summary>
    /// Query ID
    ///</summary>
    public long QueryId { get; set; }

    ///<summary>
    /// The next offset to use when navigating through results
    ///</summary>
    public string? NextOffset { get; set; }

    ///<summary>
    /// Shown as a button on top of the remaining inline result list; if clicked, redirects the user to a private chat with the bot with the specified start parameter.
    /// See <a href="https://corefork.telegram.org/type/InlineBotSwitchPM" />
    ///</summary>
    public MyTelegram.Schema.IInlineBotSwitchPM? SwitchPm { get; set; }

    ///<summary>
    /// Shown as a button on top of the remaining inline result list; if clicked, opens the specified <a href="https://corefork.telegram.org/api/bots/webapps#simple-web-apps">bot web app</a>.
    /// See <a href="https://corefork.telegram.org/type/InlineBotWebView" />
    ///</summary>
    public MyTelegram.Schema.IInlineBotWebView? SwitchWebview { get; set; }

    ///<summary>
    /// The results
    ///</summary>
    public TVector<MyTelegram.Schema.IBotInlineResult> Results { get; set; }

    ///<summary>
    /// Caching validity of the results
    ///</summary>
    public int CacheTime { get; set; }

    ///<summary>
    /// Users mentioned in the results
    ///</summary>
    public TVector<MyTelegram.Schema.IUser> Users { get; set; }

    public void ComputeFlag()
    {
        if (Gallery) { Flags[0] = true; }
        if (NextOffset != null) { Flags[1] = true; }
        if (SwitchPm != null) { Flags[2] = true; }
        if (SwitchWebview != null) { Flags[3] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(QueryId);
        if (Flags[1]) { writer.Write(NextOffset); }
        if (Flags[2]) { writer.Write(SwitchPm); }
        if (Flags[3]) { writer.Write(SwitchWebview); }
        writer.Write(Results);
        writer.Write(CacheTime);
        writer.Write(Users);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Gallery = true; }
        QueryId = reader.ReadInt64();
        if (Flags[1]) { NextOffset = reader.ReadString(); }
        if (Flags[2]) { SwitchPm = reader.Read<MyTelegram.Schema.IInlineBotSwitchPM>(); }
        if (Flags[3]) { SwitchWebview = reader.Read<MyTelegram.Schema.IInlineBotWebView>(); }
        Results = reader.Read<TVector<MyTelegram.Schema.IBotInlineResult>>();
        CacheTime = reader.ReadInt32();
        Users = reader.Read<TVector<MyTelegram.Schema.IUser>>();
    }
}