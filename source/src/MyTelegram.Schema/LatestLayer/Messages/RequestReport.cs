// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
/// Report a message in a chat for violation of telegram's Terms of Service
/// <para>Possible errors</para>
/// Code Type Description
/// 400 CHANNEL_INVALID The provided channel is invalid.
/// 400 CHANNEL_PRIVATE You haven't joined this channel/supergroup.
/// 400 PEER_ID_INVALID The provided peer id is invalid.
/// See <a href="https://corefork.telegram.org/method/messages.report" />
///</summary>
[TlObject(0x8953ab4e)]
public sealed class RequestReport : IRequest<IBool>
{
    public uint ConstructorId => 0x8953ab4e;
    ///<summary>
    /// Peer
    /// See <a href="https://corefork.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Peer { get; set; }

    ///<summary>
    /// IDs of messages to report
    ///</summary>
    public TVector<int> Id { get; set; }

    ///<summary>
    /// Why are these messages being reported
    /// See <a href="https://corefork.telegram.org/type/ReportReason" />
    ///</summary>
    public MyTelegram.Schema.IReportReason Reason { get; set; }

    ///<summary>
    /// Comment for report moderation
    ///</summary>
    public string Message { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Peer);
        writer.Write(Id);
        writer.Write(Reason);
        writer.Write(Message);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Peer = reader.Read<MyTelegram.Schema.IInputPeer>();
        Id = reader.Read<TVector<int>>();
        Reason = reader.Read<MyTelegram.Schema.IReportReason>();
        Message = reader.ReadString();
    }
}
