// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// A single media in an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or grouped media</a> sent with <a href="https://corefork.telegram.org/method/messages.sendMultiMedia">messages.sendMultiMedia</a>.
/// See <a href="https://corefork.telegram.org/constructor/inputSingleMedia" />
///</summary>
[TlObject(0x1cc6e91f)]
public sealed class TInputSingleMedia : IInputSingleMedia
{
    public uint ConstructorId => 0x1cc6e91f;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// The media
    /// See <a href="https://corefork.telegram.org/type/InputMedia" />
    ///</summary>
    public MyTelegram.Schema.IInputMedia Media { get; set; }

    ///<summary>
    /// Unique client media ID required to prevent message resending
    ///</summary>
    public long RandomId { get; set; }

    ///<summary>
    /// A caption for the media
    ///</summary>
    public string Message { get; set; }

    ///<summary>
    /// Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text
    ///</summary>
    public TVector<MyTelegram.Schema.IMessageEntity>? Entities { get; set; }

    public void ComputeFlag()
    {
        if (Entities?.Count > 0) { Flags[0] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Media);
        writer.Write(RandomId);
        writer.Write(Message);
        if (Flags[0]) { writer.Write(Entities); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        Media = reader.Read<MyTelegram.Schema.IInputMedia>();
        RandomId = reader.ReadInt64();
        Message = reader.ReadString();
        if (Flags[0]) { Entities = reader.Read<TVector<MyTelegram.Schema.IMessageEntity>>(); }
    }
}