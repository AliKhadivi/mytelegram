// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Account;

///<summary>
/// Verify an email address.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 EMAIL_INVALID The specified email is invalid.
/// 400 EMAIL_VERIFY_EXPIRED The verification email has expired.
/// See <a href="https://corefork.telegram.org/method/account.verifyEmail" />
///</summary>
[TlObject(0x32da4cf)]
public sealed class RequestVerifyEmail : IRequest<MyTelegram.Schema.Account.IEmailVerified>
{
    public uint ConstructorId => 0x32da4cf;
    ///<summary>
    /// Verification purpose
    /// See <a href="https://corefork.telegram.org/type/EmailVerifyPurpose" />
    ///</summary>
    public MyTelegram.Schema.IEmailVerifyPurpose Purpose { get; set; }

    ///<summary>
    /// Email verification code or token
    /// See <a href="https://corefork.telegram.org/type/EmailVerification" />
    ///</summary>
    public MyTelegram.Schema.IEmailVerification Verification { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Purpose);
        writer.Write(Verification);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Purpose = reader.Read<MyTelegram.Schema.IEmailVerifyPurpose>();
        Verification = reader.Read<MyTelegram.Schema.IEmailVerification>();
    }
}
