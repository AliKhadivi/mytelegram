// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stories;

///<summary>
/// See <a href="https://corefork.telegram.org/method/stories.getStoryViewsList" />
///</summary>
[TlObject(0x7ed23c57)]
public sealed class RequestGetStoryViewsList : IRequest<MyTelegram.Schema.Stories.IStoryViewsList>
{
    public uint ConstructorId => 0x7ed23c57;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool JustContacts { get; set; }
    public bool ReactionsFirst { get; set; }
    public MyTelegram.Schema.IInputPeer Peer { get; set; }
    public string? Q { get; set; }
    public int Id { get; set; }
    public string Offset { get; set; }
    public int Limit { get; set; }

    public void ComputeFlag()
    {
        if (JustContacts) { Flags[0] = true; }
        if (ReactionsFirst) { Flags[2] = true; }
        if (Q != null) { Flags[1] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Peer);
        if (Flags[1]) { writer.Write(Q); }
        writer.Write(Id);
        writer.Write(Offset);
        writer.Write(Limit);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { JustContacts = true; }
        if (Flags[2]) { ReactionsFirst = true; }
        Peer = reader.Read<MyTelegram.Schema.IInputPeer>();
        if (Flags[1]) { Q = reader.ReadString(); }
        Id = reader.ReadInt32();
        Offset = reader.ReadString();
        Limit = reader.ReadInt32();
    }
}
