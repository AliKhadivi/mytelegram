// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stories;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/stories.boostsStatus" />
///</summary>
[TlObject(0x66ea1fef)]
public sealed class TBoostsStatus : IBoostsStatus
{
    public uint ConstructorId => 0x66ea1fef;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// &nbsp;
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool MyBoost { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int Level { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int CurrentLevelBoosts { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int Boosts { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int? NextLevelBoosts { get; set; }

    ///<summary>
    /// &nbsp;
    /// See <a href="https://corefork.telegram.org/type/StatsPercentValue" />
    ///</summary>
    public MyTelegram.Schema.IStatsPercentValue? PremiumAudience { get; set; }

    public void ComputeFlag()
    {
        if (MyBoost) { Flags[2] = true; }
        if (/*NextLevelBoosts != 0 && */NextLevelBoosts.HasValue) { Flags[0] = true; }
        if (PremiumAudience != null) { Flags[1] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Level);
        writer.Write(CurrentLevelBoosts);
        writer.Write(Boosts);
        if (Flags[0]) { writer.Write(NextLevelBoosts.Value); }
        if (Flags[1]) { writer.Write(PremiumAudience); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[2]) { MyBoost = true; }
        Level = reader.ReadInt32();
        CurrentLevelBoosts = reader.ReadInt32();
        Boosts = reader.ReadInt32();
        if (Flags[0]) { NextLevelBoosts = reader.ReadInt32(); }
        if (Flags[1]) { PremiumAudience = reader.Read<MyTelegram.Schema.IStatsPercentValue>(); }
    }
}