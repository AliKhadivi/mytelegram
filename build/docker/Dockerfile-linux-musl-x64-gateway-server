#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build
ARG BUILD_CONFIGURATION=Release
ARG RUNTIME_PLATFORM=linux-musl-x64
WORKDIR /src

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories &&\
	apk add --no-cache clang build-base zlib-dev

WORKDIR /src
COPY ["Directory.Packages.props", "."]
COPY ["Directory.Build.props", "."]
#COPY ["nuget.config", "."]
COPY ["src/MyTelegram.GatewayServer/MyTelegram.GatewayServer.csproj", "src/MyTelegram.GatewayServer/"]
COPY ["src/MyTelegram.Core/MyTelegram.Core.csproj", "src/MyTelegram.Core/"]
COPY ["src/MyTelegram.Domain.Shared/MyTelegram.Domain.Shared.csproj", "src/MyTelegram.Domain.Shared/"]
COPY ["src/MyTelegram.EventBus/MyTelegram.EventBus.csproj", "src/MyTelegram.EventBus/"]
COPY ["src/MyTelegram.EventBus.Rebus/MyTelegram.EventBus.Rebus.csproj", "src/MyTelegram.EventBus.Rebus/"]
COPY ["src/MyTelegram.MTProto/MyTelegram.MTProto.csproj", "src/MyTelegram.MTProto/"]
RUN dotnet restore "./src/MyTelegram.GatewayServer/./MyTelegram.GatewayServer.csproj"
COPY . .
WORKDIR "/src/src/MyTelegram.GatewayServer"
RUN dotnet build "./MyTelegram.GatewayServer.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./MyTelegram.GatewayServer.csproj" -r $RUNTIME_PLATFORM -c $BUILD_CONFIGURATION -o /app/publish -p:PublishAot=true &&\
	strip /app/publish/MyTelegram.GatewayServer &&\
	rm /app/publish/*.pdb /app/publish/*.dbg


FROM alpine AS final
WORKDIR /app
#RUN apk --no-cache add libstdc++
COPY --from=publish /app/publish .
ENTRYPOINT [ "/app/MyTelegram.GatewayServer"]